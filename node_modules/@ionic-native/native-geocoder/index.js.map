{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/native-geocoder/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCpC,kCAAiB;;;;IAEnD;;;;;OAKG;;;;;;;IAIH,uCAAc;;;;;;cAAC,QAAgB,EAAE,SAAiB,IAA0C,MAAM,CAAC,EAAE;IAErG;;;;OAIG;;;;;;IAIH,uCAAc;;;;;cAAC,aAAqB,IAA0C,MAAM,CAAC,EAAE;;gBAtBxF,UAAU;;;;;QASR,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;SACzB,CAAC;;;;wDACmG;;QAOpG,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;SACzB,CAAC;;;;wDACqF;;;;;;;;;;;;;;;;;;;;;;;;;;IArB5E,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,+BAA+B;YACvC,SAAS,EAAE,gBAAgB;YAC3B,IAAI,EAAE,gEAAgE;YACtE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;SAC9B,CAAC;OAEW,cAAc,EAsB1B;yBA1DD;EAoCoC,iBAAiB;SAAxC,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Native Geocoder\r\n * @description\r\n * Cordova plugin for native forward and reverse geocoding\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { NativeGeocoder, NativeGeocoderReverseResult, NativeGeocoderForwardResult } from '@ionic-native/native-geocoder';\r\n *\r\n * constructor(private nativeGeocoder: NativeGeocoder) { }\r\n *\r\n * ...\r\n *\r\n * this.nativeGeocoder.reverseGeocode(52.5072095, 13.1452818)\r\n *   .then((result: NativeGeocoderReverseResult) => console.log(JSON.stringify(result)))\r\n *   .catch((error: any) => console.log(error));\r\n *\r\n * this.nativeGeocoder.forwardGeocode('Berlin')\r\n *   .then((coordinates: NativeGeocoderForwardResult) => console.log('The coordinates are latitude=' + coordinates.latitude + ' and longitude=' + coordinates.longitude))\r\n *   .catch((error: any) => console.log(error));\r\n * ```\r\n * @interfaces\r\n * NativeGeocoderReverseResult\r\n * NativeGeocoderForwardResult\r\n */\r\n@Plugin({\r\n  pluginName: 'NativeGeocoder',\r\n  plugin: 'cordova-plugin-nativegeocoder',\r\n  pluginRef: 'nativegeocoder',\r\n  repo: 'https://github.com/sebastianbaar/cordova-plugin-nativegeocoder',\r\n  platforms: ['iOS', 'Android']\r\n})\r\n@Injectable()\r\nexport class NativeGeocoder extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Reverse geocode a given latitude and longitude to find location address\r\n   * @param latitude {number} The latitude\r\n   * @param longitude {number} The longitude\r\n   * @return {Promise<NativeGeocoderReverseResult>}\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  reverseGeocode(latitude: number, longitude: number): Promise<NativeGeocoderReverseResult> { return; }\r\n\r\n  /**\r\n   * Forward geocode a given address to find coordinates\r\n   * @param addressString {string} The address to be geocoded\r\n   * @return {Promise<NativeGeocoderForwardResult>}\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  forwardGeocode(addressString: string): Promise<NativeGeocoderForwardResult> { return; }\r\n}\r\n\r\n/**\r\n * Encapsulates format information about a reverse geocoding result.\r\n * more Info: \r\n *  - https://developer.apple.com/documentation/corelocation/clplacemark\r\n *  - https://developer.android.com/reference/android/location/Address.html\r\n */\r\nexport interface NativeGeocoderReverseResult {\r\n  /**\r\n   * The country code.\r\n   */\r\n  countryCode: string;\r\n  /**\r\n   * The country name.\r\n   */\r\n  countryName: string;\r\n  /**\r\n   * The postal code.\r\n   */\r\n  postalCode: string;\r\n  /**\r\n   * The administrativeArea.\r\n   */\r\n  administrativeArea: string;\r\n  /**\r\n   * The subAdministrativeArea.\r\n   */\r\n  subAdministrativeArea: string;\r\n  /**\r\n   * The locality.\r\n   */\r\n  locality: string;\r\n  /**\r\n   * The subLocality.\r\n   */\r\n  subLocality: string;\r\n  /**\r\n   * The thoroughfare.\r\n   */\r\n  thoroughfare: string;\r\n  /**\r\n   * The subThoroughfare.\r\n   */\r\n  subThoroughfare: string;\r\n}\r\n\r\n/**\r\n * Encapsulates format information about a forward geocoding result.\r\n */\r\nexport interface NativeGeocoderForwardResult {\r\n  /**\r\n   * The latitude.\r\n   */\r\n  latitude: string;\r\n  /**\r\n   * The longitude.\r\n   */\r\n  longitude: string;\r\n}\r\n"]}